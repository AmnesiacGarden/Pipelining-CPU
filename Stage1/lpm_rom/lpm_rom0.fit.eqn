-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--C1_q_a[0] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[0] at M4K_X17_Y1
--RAM Block Operation Mode: ROM
--Port A Depth: 64, Port A Width: 16
--Port A Logical Depth: 64, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[0] = C1_q_a[0]_PORT_A_data_out[0];

--C1_q_a[15] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[15] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[15] = C1_q_a[0]_PORT_A_data_out[15];

--C1_q_a[14] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[14] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[14] = C1_q_a[0]_PORT_A_data_out[14];

--C1_q_a[13] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[13] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[13] = C1_q_a[0]_PORT_A_data_out[13];

--C1_q_a[12] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[12] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[12] = C1_q_a[0]_PORT_A_data_out[12];

--C1_q_a[11] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[11] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[11] = C1_q_a[0]_PORT_A_data_out[11];

--C1_q_a[10] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[10] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[10] = C1_q_a[0]_PORT_A_data_out[10];

--C1_q_a[9] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[9] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[9] = C1_q_a[0]_PORT_A_data_out[9];

--C1_q_a[8] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[8] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[8] = C1_q_a[0]_PORT_A_data_out[8];

--C1_q_a[7] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[7] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[7] = C1_q_a[0]_PORT_A_data_out[7];

--C1_q_a[6] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[6] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[6] = C1_q_a[0]_PORT_A_data_out[6];

--C1_q_a[5] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[5] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[5] = C1_q_a[0]_PORT_A_data_out[5];

--C1_q_a[4] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[4] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[4] = C1_q_a[0]_PORT_A_data_out[4];

--C1_q_a[3] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[3] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[3] = C1_q_a[0]_PORT_A_data_out[3];

--C1_q_a[2] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[2] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[2] = C1_q_a[0]_PORT_A_data_out[2];

--C1_q_a[1] is altsyncram:altsyncram_component|altsyncram_ghs:auto_generated|q_a[1] at M4K_X17_Y1
C1_q_a[0]_PORT_A_address = BUS(address[0], address[1], address[2], address[3], address[4], address[5]);
C1_q_a[0]_PORT_A_address_reg = DFFE(C1_q_a[0]_PORT_A_address, C1_q_a[0]_clock_0, , , );
C1_q_a[0]_clock_0 = GLOBAL(clock);
C1_q_a[0]_PORT_A_data_out = MEMORY(, , C1_q_a[0]_PORT_A_address_reg, , , , , , C1_q_a[0]_clock_0, , , , , );
C1_q_a[1] = C1_q_a[0]_PORT_A_data_out[1];


--clock is clock at PIN_29
--operation mode is input

clock = INPUT();


--address[0] is address[0] at PIN_85
--operation mode is input

address[0] = INPUT();


--address[1] is address[1] at PIN_86
--operation mode is input

address[1] = INPUT();


--address[2] is address[2] at PIN_121
--operation mode is input

address[2] = INPUT();


--address[3] is address[3] at PIN_67
--operation mode is input

address[3] = INPUT();


--address[4] is address[4] at PIN_100
--operation mode is input

address[4] = INPUT();


--address[5] is address[5] at PIN_215
--operation mode is input

address[5] = INPUT();


--q[0] is q[0] at PIN_140
--operation mode is output

q[0] = OUTPUT(C1_q_a[0]);


--q[1] is q[1] at PIN_42
--operation mode is output

q[1] = OUTPUT(C1_q_a[1]);


--q[2] is q[2] at PIN_125
--operation mode is output

q[2] = OUTPUT(C1_q_a[2]);


--q[3] is q[3] at PIN_97
--operation mode is output

q[3] = OUTPUT(C1_q_a[3]);


--q[4] is q[4] at PIN_84
--operation mode is output

q[4] = OUTPUT(C1_q_a[4]);


--q[5] is q[5] at PIN_95
--operation mode is output

q[5] = OUTPUT(C1_q_a[5]);


--q[6] is q[6] at PIN_87
--operation mode is output

q[6] = OUTPUT(C1_q_a[6]);


--q[7] is q[7] at PIN_93
--operation mode is output

q[7] = OUTPUT(C1_q_a[7]);


--q[8] is q[8] at PIN_139
--operation mode is output

q[8] = OUTPUT(C1_q_a[8]);


--q[9] is q[9] at PIN_44
--operation mode is output

q[9] = OUTPUT(C1_q_a[9]);


--q[10] is q[10] at PIN_88
--operation mode is output

q[10] = OUTPUT(C1_q_a[10]);


--q[11] is q[11] at PIN_96
--operation mode is output

q[11] = OUTPUT(C1_q_a[11]);


--q[12] is q[12] at PIN_207
--operation mode is output

q[12] = OUTPUT(C1_q_a[12]);


--q[13] is q[13] at PIN_98
--operation mode is output

q[13] = OUTPUT(C1_q_a[13]);


--q[14] is q[14] at PIN_136
--operation mode is output

q[14] = OUTPUT(C1_q_a[14]);


--q[15] is q[15] at PIN_94
--operation mode is output

q[15] = OUTPUT(C1_q_a[15]);




